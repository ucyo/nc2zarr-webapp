version: "3.8"

services:

  angular-frontend:
    ports:
      - "80:80"
    build:
      args:
        - NC2ZARR_BACKEND_URL=http://${DOMAIN}:${DJANGO_BACKEND_PORT}
        - NC2ZARR_CONTENT_URL=http://${DOMAIN}:${NGINX_PORT}/intake-catalogs

  redis:
    volumes:
      - redis-storage:/data
    expose:
      - "6379"

  django:
    ports:
      - "${DJANGO_BACKEND_PORT}:${DJANGO_BACKEND_PORT}"
    volumes:
      - "${INPUT_DIR}:/root/public/input"
      - "${OUTPUT_DIR}:/root/public/output"
      - "${INTAKE_DIR}:/root/public/intake-catalogs"
    environment:
      - NC2ZARR_INPUT=/root/public/input
      - NC2ZARR_OUTPUT=/root/public/output
      - NC2ZARR_INTAKE_CATALOGS=/root/public/intake-catalogs
      - NC2ZARR_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - NC2ZARR_POSTGRES_HOST=postgres
      - NC2ZARR_URL=${DOMAIN}

  worker:
    volumes:
      - ${INTAKE_DIR}:/home/python/intake-catalogs
      - ${INPUT_DIR}:/home/python/input
      - ${OUTPUT_DIR}:/home/python/output
    environment:
      - NC2ZARR_INPUT=/home/python/input
      - NC2ZARR_OUTPUT=/home/python/output
      - NC2ZARR_INTAKE_CATALOGS=/home/python/intake-catalogs
      - NC2ZARR_PROD=True
      - NC2ZARR_PUBLIC_URL=http://${DOMAIN}:${NGINX_PORT}/
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: ${WORKER_CPU_LIMIT} # '0.25'
          memory: ${WORKER_RAM_LIMIT} # 512M

  nginx:
    image: nginx
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - "${INPUT_DIR}:/usr/share/nginx/html/input"
      - "${OUTPUT_DIR}:/usr/share/nginx/html/output"
      - "${INTAKE_DIR}:/usr/share/nginx/html/intake-catalogs"
    environment:
      - NGINX_HOST=${DOMAIN}
      - NGINX_PORT=${NGINX_PORT}

  postgres:
    volumes:
      - postgres-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

volumes:
  redis-storage:
  postgres-storage:

version: "3.8"

services:

  angular-frontend:
    ports:
      - "80:80"
    build:
      args:
        - NC2ZARR_BACKEND_URL=http://<domain>:<backend-port>
        - NC2ZARR_CONTENT_URL=http://<domain>:<nginx-port>/intake-catalogs

  redis:
    volumes:
      - redis-storage:/data
    expose:
      - "6379"

  django:
    ports:
      - "${DJANGO_BACKEND_PORT}:${DJANGO_BACKEND_PORT}"
    volumes:
      - "${INPUT_DIR}:/root/public/input"
      - "${OUTPUT_DIR}:/root/public/output"
      - "${INTAKE_DIR}:/root/public/intake-catalogs"
    environment:
      - NC2ZARR_INPUT=/root/public/input
      - NC2ZARR_OUTPUT=/root/public/output
      - NC2ZARR_INTAKE_CATALOGS=/root/public/intake-catalogs
      - NC2ZARR_POSTGRES_PASSWORD=<postgres-password>
      - NC2ZARR_POSTGRES_HOST=postgres
      - NC2ZARR_URL=<domain>

  worker:
    volumes:
      - <intake-catalogs-directory>:/home/python/intake-catalogs
      - <input-directory>:/home/python/input
      - <output-directory>:/home/python/output
    environment:
      - NC2ZARR_INPUT=/home/python/input
      - NC2ZARR_OUTPUT=/home/python/output
      - NC2ZARR_INTAKE_CATALOGS=/home/python/intake-catalogs
      - NC2ZARR_PROD=True
      - NC2ZARR_PUBLIC_URL=http://<domain>:<nginx-port>/
    deploy:
      replicas: <worker-count> # 2
      resources:
        limits:
          cpus: <worker-cpu-limit> # '0.25'
          memory: <worker-ram-limit> # 512M

  nginx:
    image: nginx
    ports:
      - "<nginx-port>:<nginx-port>"
    volumes:
      - <parent-directory-for-input-output-and-intake-catalogs>:/usr/share/nginx/html
    environment:
      - NGINX_HOST=<domain>
      - NGINX_PORT=<nginx-port>

  postgres:
    volumes:
      - <postgres-directory>:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=<postgres-password>

volumes:
  redis-storage:
  postgres-storage:
